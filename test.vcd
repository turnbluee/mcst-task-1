$date
	Wed Mar 12 01:24:31 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! out [3:0] $end
$var parameter 32 " DATA_W $end
$var parameter 32 # POS_W $end
$var reg 1 $ clk $end
$var reg 16 % in [15:0] $end
$var reg 1 & rst $end
$scope module example $end
$var wire 1 $ clock $end
$var wire 16 ' data [15:0] $end
$var wire 1 & reset $end
$var wire 4 ( out [3:0] $end
$var parameter 32 ) DATA_W $end
$var parameter 32 * POS_W $end
$var reg 4 + sum [3:0] $end
$scope module adder $end
$var wire 4 , bit_sum [3:0] $end
$var wire 16 - in [15:0] $end
$var parameter 32 . DATA_W $end
$var parameter 32 / POS_W $end
$var reg 4 0 sum [3:0] $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 /
b10000 .
b100 *
b10000 )
b100 #
b10000 "
$end
#0
$dumpvars
b10000 1
b0 0
b0 -
b0 ,
bx +
b0 (
b0 '
1&
b0 %
0$
bx !
$end
#1
b0 !
b0 +
0&
b1000 (
b1000 ,
b1000 0
b10000 1
b1001101010100011 %
b1001101010100011 '
b1001101010100011 -
1$
#2
0$
#3
b1000 !
b1000 +
1$
#4
0$
#5
1$
#6
0$
#7
1&
1$
#8
0$
#9
b0 !
b0 +
0&
b10000 1
b1010 (
b1010 ,
b1010 0
1$
b10101111010111 %
b10101111010111 '
b10101111010111 -
#10
0$
#11
b1010 !
b1010 +
1$
#12
0$
#13
1$
#14
0$
#15
1$
